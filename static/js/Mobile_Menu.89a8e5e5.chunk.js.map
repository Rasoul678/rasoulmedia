{"version":3,"file":"static/js/Mobile_Menu.89a8e5e5.chunk.js","mappings":"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","sources":["hooks/useScrollDirection.ts","components/Icons/MenuIcon.tsx","hooks/usePreventScroll.ts","layouts/MobileMenu/BottomSheet.tsx","components/CustomLink/index.tsx","layouts/MobileMenu/index.tsx"],"sourcesContent":["import { useLayoutEffect, useState } from \"react\";\n\ntype Direction = \"up\" | \"down\";\n\nconst useScrollDirection = () => {\n  const [scrollDir, setScrollDir] = useState<Direction>(\"up\");\n\n  useLayoutEffect(() => {\n    const threshold = 0;\n    let lastScrollY = window.pageYOffset; //! use 'pageYOffset' which is more reliable in cross browsing\n    let ticking = false;\n\n    const updateScrollDir = () => {\n      const scrollY = window.pageYOffset;\n\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\n        ticking = false;\n        return;\n      }\n      setScrollDir(scrollY > lastScrollY ? \"down\" : \"up\");\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n      ticking = false;\n    };\n\n    const onScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDir);\n        ticking = true;\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollDir]);\n\n  return scrollDir;\n};\n\nexport default useScrollDirection;\n","import { SiReactrouter } from \"react-icons/si\";\nimport CSS from 'csstype';\n\ninterface MenuIconProps {\n  size?: number;\n  color?: string;\n  onClick?: () => void;\n  style?: CSS.Properties;\n}\n\nconst MenuIcon: React.FC<MenuIconProps> = (props) => {\n  const { size, color, onClick } = props;\n\n  return <SiReactrouter onClick={onClick} size={size} color={color} />;\n};\n\nexport default MenuIcon;\n","import { useLayoutEffect } from \"react\";\n\nconst usePreventScroll = (ref: any, enable: boolean) => {\n  useLayoutEffect(() => {\n    const containerNode = ref?.current;\n    const bodyElement = document.getElementsByTagName(\"body\")[0];\n    const preventScroll = (\n      e: WheelEvent | MouseEvent | UIEvent | TouchEvent\n    ) => {\n      //! First method (part 1)\n      if (ref.current === e.currentTarget) {\n        bodyElement.style.height = \"100vh\";\n        bodyElement.style.overflow = \"hidden\";\n      }\n      //! Second method (It prevents scroll for all elements)\n      //  e.preventDefault();\n    };\n    containerNode.addEventListener(\"mousewheel\", preventScroll); //! Windows\n    containerNode.addEventListener(\"touchmove\", preventScroll, false); //! Mobile\n\n    //! First method (part 2)\n    if (enable) {\n      bodyElement.style.height = \"100vh\";\n      bodyElement.style.overflow = \"hidden\";\n    } else {\n      bodyElement.style.height = \"\";\n      bodyElement.style.overflow = \"\";\n    }\n\n    //! Clean up\n    return () => {\n      containerNode.removeEventListener(\"mousewheel\", preventScroll);\n      containerNode.removeEventListener(\"touchmove\", preventScroll, false);\n    };\n  }, [ref, enable]);\n};\n\nexport default usePreventScroll;\n","import React, { ReactNode, useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as Styled from \"./MobileMenu.styles\";\nimport usePreventScroll from \"hooks/usePreventScroll\";\nimport MenuIcon from \"components/Icons/MenuIcon\";\nimport SunIcon from \"components/Icons/SunIcon\";\nimport MoonIcon from \"components/Icons/MoonIcon\";\nimport ColorPaletteIcon from \"components/Icons/ColorPaletteIcon\";\nimport Modal from \"components/Modal\";\nimport useModal from \"hooks/useModal\";\nimport SelectLanguage from \"./SelectLanguage\";\nimport SelectPalette from \"./SelectPalette\";\nimport useFlags from \"hooks/useFlags\";\nimport { useStore } from \"store/store\";\n\ntype ModalType = \"language\" | \"palette\" | null;\n\nconst sheet = {\n  open: {\n    y: 50,\n    transition: { duration: 0.1 },\n  },\n  closed: {\n    y: 250,\n    transition: { duration: 0.1 },\n  },\n};\n\nconst BottomSheet: React.FC = () => {\n  const { store, actions } = useStore();\n  const { isMobileMenuOpen, themeMode } = store.global;\n  const { toggleMobileMenu, toggleThemeMode } = actions;\n  const ref = useRef<HTMLDivElement>(null);\n  const { t, i18n } = useTranslation();\n  const { isShown, toggle } = useModal();\n  const [modalType, setModalType] = useState<ModalType>(null);\n\n  usePreventScroll(ref, isMobileMenuOpen);\n  const { flag } = useFlags(i18n.language);\n\n  const handleCloseMobileMenu = () => {\n    toggleMobileMenu(false);\n  };\n\n  const handleToggle = () => {\n    toggleThemeMode(themeMode === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const handleSelect = useCallback((type: ModalType) => {\n    return () => {\n      toggle();\n      setModalType(type);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getModalContent = (type: ModalType) => {\n    switch (type) {\n      case \"language\":\n        return <SelectLanguage toggle={toggle} />;\n      case \"palette\":\n        return <SelectPalette toggle={toggle} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Styled.ExpandedMenuContainer\n      ref={ref}\n      initial={false}\n      variants={sheet}\n      animate={isMobileMenuOpen ? \"open\" : \"closed\"}\n    >\n      <MenuIcon size={35} onClick={handleCloseMobileMenu} />\n      <Modal\n        isShown={isShown}\n        hide={toggle}\n        headerText={\n          modalType === \"language\" ? t(\"select-lang\") : t(\"select-theme\")\n        }\n        modalContent={getModalContent(modalType)}\n      />\n      <Styled.MenuCellsContainer>\n        <Styled.MenuCellWrapper onClick={handleToggle}>\n          {themeMode === \"dark\" ? (\n            <SunIcon size={50} color=\"#F8C004\" />\n          ) : (\n            <MoonIcon className=\"dark-mode\" size={50} color=\"#333\" />\n          )}\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper>\n          <Styled.LangCellWrapper onClick={handleSelect(\"language\")}>\n            {flag as ReactNode}\n          </Styled.LangCellWrapper>\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper onClick={handleSelect(\"palette\")}>\n          <ColorPaletteIcon size={50} />\n        </Styled.MenuCellWrapper>\n      </Styled.MenuCellsContainer>\n      {/* <GithubRepos showHeader={false} containerStyles={{ width: \"100%\" }} /> */}\n      {/* <Slider height=\"calc(100% - 14rem)\">\n        {isLoading && (\n          <div className=\"slider-loader-container \">\n            <AppLoader />\n          </div>\n        )}\n        {!isLoading &&\n          repositories?.map((repo) => {\n            return <GithubRepository repo={repo} key={repo?.id} />;\n          })}\n      </Slider> */}\n    </Styled.ExpandedMenuContainer>\n  );\n};\n\nexport default BottomSheet;\n","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport type { LinkProps } from \"react-router-dom\";\nimport { Children, cloneElement, isValidElement, ReactNode } from \"react\";\n\nconst CustomLink = ({ children, to, ...props }: LinkProps) => {\n  let resolved = useResolvedPath(to);\n  let match = useMatch({ path: resolved.pathname, end: true });\n\n  return (\n    <Link to={to} {...props}>\n      {Children.map<ReactNode, ReactNode>(children, (child) => {\n        if (isValidElement(child)) {\n          return cloneElement<any>(child, { match });\n        }\n      })}\n    </Link>\n  );\n};\n\nexport default CustomLink;\n","import { useEffect, useState } from \"react\";\nimport * as Styled from \"./MobileMenu.styles\";\nimport useScrollDirection from \"hooks/useScrollDirection\";\nimport MenuIcon from \"components/Icons/MenuIcon\";\nimport BottomSheet from \"./BottomSheet\";\nimport CustomLink from \"components/CustomLink\";\nimport { useStore } from \"store/store\";\n\nimport HomeLottie from \"components/Lotties/Home\";\nimport LayersLottie from \"components/Lotties/Layers\";\nimport CodeLottie from \"components/Lotties/Code\";\nimport ContactLottie from \"components/Lotties/Contact\";\n\nconst MobileMenu: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const direction = useScrollDirection();\n  const { store, actions } = useStore();\n  const { isMobileMenuOpen } = store.global;\n  const { toggleMobileMenu } = actions;\n\n  const handleMenuClick = () => {\n    !isMobileMenuOpen && toggleMobileMenu(!isMobileMenuOpen);\n  };\n\n  const hasVScrollbar = document.body.scrollHeight > document.body.clientHeight;\n\n  useEffect(() => {\n    if (direction === \"down\") {\n      toggleMobileMenu(false);\n    }\n\n    if (!hasVScrollbar) {\n      setIsVisible(true);\n    }\n\n    if (direction === \"up\") {\n      setIsVisible(true);\n    } else if (direction === \"down\") {\n      setIsVisible(false);\n    }\n  }, [direction, hasVScrollbar, toggleMobileMenu]);\n\n  return (\n    <Styled.MobileMenuContainer isVisible={isVisible}>\n      <Styled.MenuItem as={CustomLink} to=\"/\">\n        <HomeLottie style={{ height: \"2.5rem\" }} />\n      </Styled.MenuItem>\n      <Styled.MenuItem as={CustomLink} to=\"/apps\">\n        <LayersLottie style={{ height: \"3.7rem\" }} />\n      </Styled.MenuItem>\n      <Styled.MenuItem onClick={handleMenuClick} isOpen={isMobileMenuOpen}>\n        <BottomSheet />\n        {!isMobileMenuOpen && <MenuIcon onClick={handleMenuClick} size={35} />}\n      </Styled.MenuItem>\n      <Styled.MenuItem as={CustomLink} to=\"/code\">\n        <CodeLottie style={{ height: \"4.7rem\", width: \"4.7rem\" }} />\n      </Styled.MenuItem>\n      <Styled.MenuItem as={CustomLink} to=\"/contact\">\n        <ContactLottie style={{ height: \"4rem\" }} />\n      </Styled.MenuItem>\n    </Styled.MobileMenuContainer>\n  );\n};\n\nexport default MobileMenu;\n"],"names":["_useState","useState","_useState2","_slicedToArray","scrollDir","setScrollDir","useLayoutEffect","lastScrollY","window","pageYOffset","ticking","updateScrollDir","scrollY","Math","abs","onScroll","requestAnimationFrame","addEventListener","removeEventListener","props","size","color","onClick","_jsx","SiReactrouter","ref","enable","containerNode","current","bodyElement","document","getElementsByTagName","preventScroll","e","currentTarget","style","height","overflow","sheet","open","y","transition","duration","closed","_useStore","useStore","store","actions","_store$global","global","isMobileMenuOpen","themeMode","toggleMobileMenu","toggleThemeMode","useRef","_useTranslation","useTranslation","t","i18n","_useModal","useModal","isShown","toggle","modalType","setModalType","usePreventScroll","flag","useFlags","language","handleSelect","useCallback","type","_jsxs","Styled","initial","variants","animate","children","MenuIcon","Modal","hide","headerText","modalContent","SelectLanguage","SelectPalette","getModalContent","SunIcon","MoonIcon","className","ColorPaletteIcon","_ref","to","_objectWithoutProperties","_excluded","resolved","useResolvedPath","match","useMatch","path","pathname","end","Link","_objectSpread","Children","map","child","isValidElement","cloneElement","isVisible","setIsVisible","direction","useScrollDirection","handleMenuClick","hasVScrollbar","body","scrollHeight","clientHeight","useEffect","as","CustomLink","HomeLottie","LayersLottie","isOpen","BottomSheet","CodeLottie","width","ContactLottie"],"sourceRoot":""}