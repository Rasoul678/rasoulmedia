{"version":3,"file":"static/js/Tablet_Navigation.61ed422f.chunk.js","mappings":"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","sources":["layouts/TabletMenu/MenuItem.tsx","layouts/TabletMenu/Navigation.tsx"],"sourcesContent":["import lottie from \"lottie-web\";\nimport { ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Styled from \"./TabletMenu.styles\";\n\ninterface MenuItemProps {\n  name: string;\n  linkTo: string;\n  children?: ReactNode;\n}\n\nconst variants = {\n  open: {\n    y: 0,\n    x: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 0,\n    x: -250,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst MenuItem: React.FC<MenuItemProps> = ({ name, linkTo, children }) => {\n  return (\n    <Styled.TabletMenuItem\n      variants={variants}\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.95 }}\n      onMouseEnter={() => lottie.play(name)}\n      onMouseLeave={() => lottie.stop(name)}\n    >\n      <Styled.TabletMenuLink as={Link} to={linkTo}>\n        {children}\n        <Styled.TabletMenuText>{name}</Styled.TabletMenuText>\n      </Styled.TabletMenuLink>\n    </Styled.TabletMenuItem>\n  );\n};\n\nexport default MenuItem;\n","import { ReactNode, useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport MenuItem from \"./MenuItem\";\nimport * as Styled from \"./TabletMenu.styles\";\nimport HomeLottie from \"components/Lotties/Home\";\nimport LayersLottie from \"components/Lotties/Layers\";\nimport CodeLottie from \"components/Lotties/Code\";\nimport ContactLottie from \"components/Lotties/Contact\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport useLanguages from \"hooks/useLanguages\";\nimport SunIcon from \"components/Icons/SunIcon\";\nimport MoonIcon from \"components/Icons/MoonIcon\";\nimport ColorPaletteIcon from \"components/Icons/ColorPaletteIcon\";\nimport useActions from \"hooks/useActions\";\nimport useModal from \"hooks/useModal\";\nimport Modal from \"components/Modal\";\nimport SelectLanguage from \"layouts/MobileMenu/SelectLanguage\";\nimport SelectPalette from \"layouts/MobileMenu/SelectPalette\";\n\ntype ModalType = \"language\" | \"palette\" | null;\n\nconst navigate = {\n  open: {\n    y: 0,\n    x: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 0,\n    x: window.float === \"right\" ? 500 : -250,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst variants = {\n  open: {\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n  },\n  closed: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  },\n};\n\nconst style = { height: \"2.5rem\", width: \"2.5rem\" };\n\nconst Navigation = () => {\n  const { t, i18n } = useTranslation();\n  const { toggleThemeMode } = useActions();\n\n  const { themeMode } = useTypedSelector((state) => state.global);\n  const { flag } = useLanguages(i18n.language);\n\n  const [modalType, setModalType] = useState<ModalType>(null);\n\n  const { isShown, toggle } = useModal();\n\n  const handleSelect = useCallback((type: ModalType) => {\n    return () => {\n      toggle();\n      setModalType(type);\n    };\n  }, [toggle]);\n\n  const handleToggle = () => {\n    toggleThemeMode(themeMode === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const getModalContent = (type: ModalType) => {\n    switch (type) {\n      case \"language\":\n        return <SelectLanguage toggle={toggle} />;\n      case \"palette\":\n        return <SelectPalette toggle={toggle} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Styled.TabletMenuItemsWrapper variants={navigate}>\n      <Modal\n        isShown={isShown}\n        hide={toggle}\n        headerText={\n          modalType === \"language\" ? t(\"select-lang\") : t(\"select-theme\")\n        }\n        modalContent={getModalContent(modalType)}\n      />\n        <MenuItem linkTo=\"/\" name={t(\"nav.home\")}>\n          <HomeLottie name={t(\"nav.home\")} style={style} />\n        </MenuItem>\n        <MenuItem linkTo=\"/apps\" name={t(\"nav.applications\")}>\n          <LayersLottie name={t(\"nav.applications\")} style={style} />\n        </MenuItem>\n        <MenuItem linkTo=\"/code\" name={t(\"nav.code\")}>\n          <CodeLottie name={t(\"nav.code\")} style={style} />\n        </MenuItem>\n        <MenuItem linkTo=\"/contact\" name={t(\"nav.contact\")}>\n          <ContactLottie name={t(\"nav.contact\")} style={style} />\n        </MenuItem>\n      <Styled.MenuCellsContainer variants={variants}>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleToggle}\n        >\n          {themeMode === \"dark\" ? (\n            <SunIcon size={35} />\n          ) : (\n            <MoonIcon className=\"dark-mode\" size={35} />\n          )}\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <Styled.LangCellWrapper onClick={handleSelect(\"language\")}>\n            {flag as ReactNode}\n          </Styled.LangCellWrapper>\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleSelect(\"palette\")}\n        >\n          <ColorPaletteIcon size={35} />\n        </Styled.MenuCellWrapper>\n      </Styled.MenuCellsContainer>\n    </Styled.TabletMenuItemsWrapper>\n  );\n};\n\nexport default Navigation;\n"],"names":["variants","open","y","x","opacity","transition","stiffness","velocity","closed","name","linkTo","children","whileHover","scale","whileTap","onMouseEnter","lottie","onMouseLeave","as","Link","to","navigate","window","float","staggerChildren","delayChildren","staggerDirection","style","height","width","useTranslation","t","i18n","toggleThemeMode","useActions","themeMode","useTypedSelector","state","global","flag","useLanguages","language","useState","modalType","setModalType","useModal","isShown","toggle","handleSelect","useCallback","type","Modal","hide","headerText","modalContent","SelectLanguage","SelectPalette","getModalContent","Home","Layers","Code","Contact","onClick","SunIcon","size","MoonIcon","className","ColorPaletteIcon"],"sourceRoot":""}