{"version":3,"file":"static/js/682.32c767b5.chunk.js","mappings":"kNAOaA,EAASC,EAAAA,GAAAA,IAAH,8WACR,qBAAGC,UAA6B,OAAS,iBAKpC,gBAAGC,EAAH,EAAGA,MAAH,MACA,YADA,EAAUC,SACGD,EAAME,QAAQC,UAAUC,mBAC1C,gBAAGJ,EAAH,EAAGA,MAAH,MACK,YADL,EAAUC,QACOD,EAAMK,OAASL,EAAME,QAAQC,UAAUG,aAG/D,gBAAGN,EAAH,EAAGA,MAAH,MACY,YADZ,EAAUC,SACV,4BAA8CD,EAAMK,WAMpD,kBACS,UADT,EAAGE,MACiB,4DACpB,kBACS,WADT,EAAGA,MACkB,uDACrB,kBACS,UADT,EAAGA,MACiB,2DAOXC,EAAeV,EAAAA,GAAAA,IAAH,mFAEZ,qBAAGW,QAAyB,OAAS,U,0+5CCclD,EAvCsC,SAACC,GACrC,IACEC,EAQED,EARFC,QACAJ,EAOEG,EAPFH,KACAK,EAMEF,EANFE,UACAC,EAKEH,EALFG,WACAd,EAIEW,EAJFX,UALF,EASIW,EAHFT,QAAAA,OANF,MAMY,UANZ,EAOEa,EAEEJ,EAFFI,SACGC,GARL,OASIL,EATJ,GAUMM,GAAYC,EAAAA,EAAAA,QAA8B,OAEhDC,EAAAA,EAAAA,GAAU,CACRF,UAAWA,EACXG,cAAeN,GAAcO,EAC7BC,KAAM,WASR,OACE,UAAC,GAAD,gBACEtB,UAAWA,EACXQ,KAAMA,EACNI,QAVsB,WACnBC,GACI,OAAPD,QAAO,IAAPA,GAAAA,KASAV,QAASA,GACLc,GALN,eAOE,SAAC,EAAD,CAAqBN,QAASG,EAAWU,IAAKN,KAC5CJ,GAAaE,Q,sDCnBrB,IA3BkB,SAACS,GACjB,IACEJ,EAKEI,EALFJ,cACAH,EAIEO,EAJFP,UAFF,EAMIO,EAHFC,SAAAA,OAHF,WAMID,EAFFE,KAAAA,OAJF,WAMIF,EADFF,KAAAA,OALF,MAKS,GALT,EAuBA,OAfAK,EAAAA,EAAAA,YAAU,WAUR,OATAC,IAAAA,cAAqB,CACnBX,UAAYA,EAAkBY,QAC9BC,SAAU,MACVJ,KAAAA,EACAD,SAAAA,EACAL,cAAAA,EACAE,KAAAA,IAGK,WACLM,IAAAA,QAAeN,MAEhB,CAACF,EAAeK,EAAUC,EAAMJ,EAAML,IAElCW","sources":["components/Button/Button.styles.ts","components/Button/index.tsx","hooks/useLottie.ts"],"sourcesContent":["import styled from \"styled-components\";\ninterface IButtonProps {\n  size: \"small\" | \"medium\" | \"large\";\n  fullWidth?: boolean;\n  variant: \"outline\" | \"ghost\" | \"regular\";\n}\n\nexport const Button = styled.div<IButtonProps>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"fit-content\")};\n  min-width: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${({ theme, variant }) =>\n    variant === \"regular\" && theme.buttons.secondary.backgroundColor};\n  color: ${({ theme, variant }) =>\n    variant !== \"regular\" ? theme.border : theme.buttons.secondary.textColor};\n  padding: 0.2em 0.6em 0.2em;\n  border-radius: 1.5em;\n  ${({ theme, variant }) =>\n    variant === \"outline\" && `border: 1px solid ${theme.border}`};\n  cursor: pointer;\n  user-select: none;\n  text-transform: capitalize;\n  position: relative;\n  font-weight: 600;\n  ${({ size }) =>\n    size === \"small\" && \"min-height: 1.9em; font-size: 0.85em; min-width: 4rem;\"}\n  ${({ size }) =>\n    size === \"medium\" && \"min-height: 2em; font-size: 1em; min-width: 5rem;\"}\n  ${({ size }) =>\n    size === \"large\" && \"min-height: 2.2em; font-size: 1.1em; min-width: 6rem;\"}\n`;\n\ninterface ButtonLottieProps {\n  isShown?: boolean;\n}\n\nexport const ButtonLottie = styled.div<ButtonLottieProps>`\n  width: 3em;\n  display: ${({ isShown }) => (isShown ? \"flex\" : \"none\")};\n  flex-direction: column;\n`;\n","import { HTMLAttributes, ReactNode, useRef } from \"react\";\nimport useLottie from \"hooks/useLottie\";\nimport * as Styled from \"./Button.styles\";\nimport json from \"assets/animations/lordicons/333-loader-4-edited.json\";\n\ninterface ButtonProps extends HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void;\n  size: \"small\" | \"medium\" | \"large\";\n  isLoading?: boolean;\n  loaderJson?: any;\n  fullWidth?: boolean;\n  variant?: \"outline\" | \"ghost\" | \"regular\";\n  children?: ReactNode;\n}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const {\n    onClick,\n    size,\n    isLoading,\n    loaderJson,\n    fullWidth,\n    variant = \"regular\",\n    children,\n    ...rest\n  } = props;\n  const container = useRef<HTMLDivElement | null>(null);\n\n  useLottie({\n    container: container as any,\n    animationData: loaderJson || json,\n    name: \"button\",\n  });\n\n  const handleClickButton = () => {\n    if (!isLoading) {\n      onClick?.();\n    }\n  };\n\n  return (\n    <Styled.Button\n      fullWidth={fullWidth}\n      size={size}\n      onClick={handleClickButton}\n      variant={variant}\n      {...rest}\n    >\n      <Styled.ButtonLottie isShown={isLoading} ref={container} />\n      {!isLoading && children}\n    </Styled.Button>\n  );\n};\n\nexport default Button;\n","import { useEffect } from \"react\";\nimport lottie, { AnimationConfigWithData } from \"lottie-web\";\n\nconst useLottie = (options: AnimationConfigWithData) => {\n  const {\n    animationData,\n    container,\n    autoplay = true,\n    loop = true,\n    name = \"\",\n  } = options;\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: (container as any).current,\n      renderer: \"svg\",\n      loop,\n      autoplay,\n      animationData,\n      name,\n    });\n\n    return () => {\n      lottie.destroy(name);\n    };\n  }, [animationData, autoplay, loop, name, container]);\n\n  return lottie;\n};\n\nexport default useLottie;\n"],"names":["Button","styled","fullWidth","theme","variant","buttons","secondary","backgroundColor","border","textColor","size","ButtonLottie","isShown","props","onClick","isLoading","loaderJson","children","rest","container","useRef","useLottie","animationData","json","name","ref","options","autoplay","loop","useEffect","lottie","current","renderer"],"sourceRoot":""}