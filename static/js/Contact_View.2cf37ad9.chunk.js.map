{"version":3,"file":"static/js/Contact_View.2cf37ad9.chunk.js","mappings":"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","sources":["hooks/useResponsive.ts","components/MediaQuery/Mobile.tsx","components/MediaQuery/Tablet.tsx","components/MediaQuery/Desktop.tsx","components/MediaQuery/BigScreen.tsx","layouts/Main/RenderMenu.tsx","layouts/Main/index.tsx","views/Contact/Contact.styles.ts","components/Input/Input.styles.ts","components/Input/index.tsx","components/Textarea/Textarea.styles.ts","components/Textarea/index.tsx","utils/renderToast.ts","views/Contact/index.tsx"],"sourcesContent":["import { useMediaQuery } from \"react-responsive\";\n\nconst useResponsive = () => {\n  const isBigScreenDevice = useMediaQuery({ minWidth: 1824 });\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 1026 });\n  const isTablet = useMediaQuery({ maxWidth: 1025 });\n  const isMobile = useMediaQuery({ maxWidth: 550 });\n  const isPortrait = useMediaQuery({ orientation: \"portrait\" });\n\n  return { isBigScreenDevice, isDesktopOrLaptop, isTablet, isMobile, isPortrait };\n};\n\nexport default useResponsive;\n","import { ReactNode } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\ninterface OnMobileProps {\n  children?: ReactNode;\n}\n\nconst OnMobile: React.FC<OnMobileProps> = ({ children }) => {\n  const { isMobile } = useResponsive();\n\n  return isMobile ? <>{children}</> : null;\n};\n\nexport default OnMobile;\n","import { ReactNode } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\ninterface OnTabletProps {\n  children?: ReactNode;\n}\n\nconst OnTablet: React.FC<OnTabletProps> = ({ children }) => {\n  const { isMobile, isTablet } = useResponsive();\n\n  return !isMobile && isTablet ? <>{children}</> : null;\n};\n\nexport default OnTablet;\n","import { ReactNode } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\ninterface OnDesktopProps {\n  children?: ReactNode;\n}\n\nconst OnDesktop: React.FC<OnDesktopProps> = ({ children }) => {\n  const { isDesktopOrLaptop, isBigScreenDevice } = useResponsive();\n\n  return isDesktopOrLaptop && !isBigScreenDevice ? <>{children}</> : null;\n};\n\nexport default OnDesktop;\n","import {  ReactNode } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\ninterface OnBigScreenProps {\n  children?: ReactNode;\n}\n\nconst OnBigScreen: React.FC<OnBigScreenProps> = ({ children }) => {\n  const { isBigScreenDevice } = useResponsive();\n\n  return isBigScreenDevice ? <>{children}</> : null;\n};\n\nexport default OnBigScreen;\n","import { lazy } from \"react\";\nimport OnMobile from \"components/MediaQuery/Mobile\";\nimport OnTablet from \"components/MediaQuery/Tablet\";\nimport OnDesktop from \"components/MediaQuery/Desktop\";\nimport OnBigScreen from \"components/MediaQuery/BigScreen\";\n\nconst MobileMenu = lazy(\n  () => import(/*webpackChunkName: \"Mobile_Menu\"*/ \"layouts/MobileMenu\")\n);\n\nconst TabletMenu = lazy(\n  () => import(/*webpackChunkName: \"Tablet_Menu\"*/ \"layouts/TabletMenu\")\n);\n\nconst DesktopMenu = lazy(\n  () => import(/*webpackChunkName: \"Desktop_Menu\"*/ \"layouts/DesktopMenu\")\n);\n\nconst RenderMenu: React.FC = () => {\n  return (\n    <>\n      <OnMobile>\n        <MobileMenu />\n      </OnMobile>\n      <OnTablet>\n        <TabletMenu />\n      </OnTablet>\n      <OnDesktop>\n        <DesktopMenu />\n      </OnDesktop>\n      <OnBigScreen>\n        <DesktopMenu />\n      </OnBigScreen>\n    </>\n  );\n};\n\nexport default RenderMenu;\n","import { ReactNode } from \"react\";\nimport RenderMenu from \"./RenderMenu\";\n\ninterface MainLayoutProps {\n  children?: ReactNode;\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  return (\n    <section>\n      <RenderMenu />\n      {children}\n    </section>\n  );\n};\n\nexport default MainLayout;\n","import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nexport const InputsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  width: 60%;\n  margin: 1rem auto 0rem;\n\n  @media (max-width: 500px) {\n    width: 80%;\n  }\n\n  @media (max-width: 900px) {\n    width: 75%;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin-top: 2rem;\n`;\n\nexport const SocialWrapper = styled(motion.div)`\n  position: relative;\n  cursor: pointer;\n`;\n","import styled, { css } from \"styled-components\";\n\nconst commonCss = css`\n  line-height: 1rem;\n  font-size: 0.85rem;\n  top: -1rem;\n  background: #fff;\n  padding: 0.35rem 0.8rem;\n  border-radius: 0.2rem;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  flex: 1 1 250px;\n`;\n\nexport const Indicator = styled.div`\n  position: absolute;\n  top: 2.3rem;\n  width: 0;\n  height: 0.2rem;\n  border-bottom-left-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem;\n  background-color: #50a989;\n  transition: width 0.3s linear;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  padding: 0.5rem 0.8rem;\n  font-size: 1.2rem;\n  border-radius: 0.3rem;\n  border: none;\n  box-sizing: border-box;\n  outline: 0;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n\n  ::placeholder {\n    color: transparent;\n  }\n\n  :focus {\n    border-color: #50a989;\n  }\n\n  :not(:placeholder-shown) + label::before {\n    ${commonCss};\n    ${({ dir }) => dir}: 0;\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :not(:placeholder-shown) ~ div,\n  :focus ~ div {\n    width: 100%;\n  }\n\n  :invalid ~ div {\n    background-color: #bd4b4b;\n  }\n\n  :focus + label::before {\n    ${commonCss};\n    ${({ dir }) => dir}: 0;\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :required:focus + label::after,\n  :required:not(:placeholder-shown) + label::after {\n    content: \"*\";\n    position: absolute;\n    top: -1.5rem;\n    ${({ dir }) => dir}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Label = styled.label`\n  ::before {\n    text-transform: capitalize;\n    content: attr(title);\n    position: absolute;\n    top: 0;\n    ${({ dir }) => dir}: 0.8rem;\n    width: fit-content;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #ccc;\n    transition: all 0.3s ease;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0rem;\n    ${({ dir }) => dir}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Error = styled.span`\n  width: 100%;\n  display: block;\n  font-size: 0.8rem;\n  text-align: start;\n  font-weight: bold;\n  color: #eb4a62;\n`;\n","import { InputHTMLAttributes } from \"react\";\nimport * as Styled from \"./Input.styles\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label?: string;\n  error?: string;\n}\n\nconst Input: React.FC<InputProps> = ({ name, label, error, ...rest }) => {\n  const { float } = window;\n  \n  return (\n    <Styled.InputContainer>\n      <Styled.Input\n        dir={float}\n        id={name}\n        name={name}\n        placeholder=\"placeholder\"\n        {...rest}\n      />\n      <Styled.Label dir={float} title={label} htmlFor={name} />\n      <Styled.Indicator />\n      {!!error && <Styled.Error>{error}</Styled.Error>}\n    </Styled.InputContainer>\n  );\n};\n\nexport default Input;\n","import styled, { css } from \"styled-components\";\n\nconst commonCss = css`\n  line-height: 1rem;\n  font-size: 0.85rem;\n  top: -1rem;\n  background: #fff;\n  padding: 0.35rem 0.8rem;\n  border-radius: 0.2rem;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n`;\n\nexport const TextareaContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const Textarea = styled.textarea`\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 7rem;\n  outline: 0;\n  padding: 1rem 0.8rem;\n  font-size: 1rem;\n  font-family: IRANSans;\n  border-radius: 0.3rem;\n  border: none;\n  box-sizing: border-box;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n\n  @media only screen and (min-width: 706px) {\n    min-height: 12rem;\n  }\n\n  ::placeholder {\n    color: transparent;\n  }\n\n  :focus {\n    border-color: #50a989;\n  }\n\n  :not(:placeholder-shown) ~ div,\n  :focus ~ div {\n    width: 100%;\n  }\n\n  :invalid ~ div {\n    background-color: #bd4b4b;\n  }\n\n  :not(:placeholder-shown) + label::before {\n    ${commonCss};\n    ${({ dir }) => dir}: 0;\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :focus + label::before {\n    ${commonCss};\n    ${({ dir }) => dir}: 0;\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :required:focus + label::after,\n  :required:not(:placeholder-shown) + label::after {\n    content: \"*\";\n    position: absolute;\n    top: -1.5rem;\n    ${({ dir }) => dir}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Label = styled.label`\n  ::before {\n    text-transform: capitalize;\n    content: attr(title);\n    position: absolute;\n    top: 0;\n    ${({ dir }) => dir}: 0.8rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    width: fit-content;\n    color: #ccc;\n    transition: all 0.3s ease;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0rem;\n    ${({ dir }) => dir}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Indicator = styled.div`\n  position: absolute;\n  bottom: 0.65rem;\n  width: 0;\n  height: 0.2rem;\n  border-bottom-left-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem;\n  background-color: #50a989;\n  transition: width 0.3s linear;\n`;\n\nexport const Error = styled.span`\n  position: absolute;\n  width: 100%;\n  bottom: -0.7rem;\n  display: block;\n  font-size: 0.8rem;\n  text-align: start;\n  font-weight: bold;\n  color: #eb4a62;\n`;\n","import { TextareaHTMLAttributes } from \"react\";\nimport * as Styled from \"./Textarea.styles\";\n\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  name: string;\n  label?: string;\n  error?: string;\n}\n\nconst Textarea: React.FC<TextareaProps> = ({ name, label, error, ...rest }) => {\n  const { float } = window;\n\n  return (\n    <Styled.TextareaContainer>\n      <Styled.Textarea\n        dir={float}\n        id={name}\n        name={name}\n        placeholder=\"placeholder\"\n        {...rest}\n      />\n      <Styled.Label dir={float} title={label} htmlFor={name} />\n      <Styled.Indicator />\n      {!!error && <Styled.Error>{error}</Styled.Error>}\n    </Styled.TextareaContainer>\n  );\n};\n\nexport default Textarea;\n","import { toast } from \"react-toastify\";\nimport { ToastContent, ToastOptions } from \"react-toastify/dist/types\";\n\nconst renderToast = (params: ToastOptions & { message: ToastContent }) => {\n  const { type, message, ...rest } = params;\n\n  if (!!type && type !== \"default\") {\n    return toast[type](message, { ...rest });\n  } else {\n    return toast(message, { ...rest });\n  }\n};\n\nexport default renderToast;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport Input from \"components/Input\";\nimport Textarea from \"components/Textarea\";\nimport Button from \"components/Button\";\nimport sendMailJson from \"assets/animations/lordicons/green/177-envelope-mail-send-outline-edited.json\";\nimport { sendEmail } from \"utils/helpers\";\nimport { View } from \"components/Global/GlobalStyles\";\nimport * as Styled from \"./Contact.styles\";\nimport renderToast from \"utils/renderToast\";\nimport MainLayout from \"layouts/Main\";\n\nconst INITIAL_FORM = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n};\n\nconst Contact: React.FC = () => {\n  const [isSending, setIsSending] = useState(false);\n  const [contactForm, setContactForm] = useState(INITIAL_FORM);\n  const { t } = useTranslation();\n  const { name: themeName, background, text } = useTheme();\n\n  const [error, setError] = useState({ name: \"\", email: \"\", message: \"\" });\n\n  const handleSendEmail = () => {\n    if (!contactForm.message) {\n      setError((oldErr) => ({\n        ...oldErr,\n        message: t(\"msg.input.error\", { input: t(\"message\") }),\n      }));\n    }\n\n    if (!contactForm.name) {\n      setError((oldErr) => ({\n        ...oldErr,\n        name: t(\"msg.input.error\", { input: t(\"name\") }),\n      }));\n    }\n\n    if (!contactForm.email) {\n      setError((oldErr) => ({\n        ...oldErr,\n        email: t(\"msg.input.error\", { input: t(\"email\") }),\n      }));\n    }\n\n    if (!contactForm.name || !contactForm.message || !contactForm.email) return;\n\n    setIsSending(true);\n    sendEmail(contactForm)\n      .then(() => {\n        setContactForm(INITIAL_FORM);\n        renderToast({\n          message: t(\"msg.message.sent\"),\n          theme: themeName === \"dark\" ? \"dark\" : \"light\",\n          type: \"success\",\n          style: { backgroundColor: background, color: text },\n        });\n      })\n      .catch(() => {\n        renderToast({\n          message: t(\"msg.message.error\"),\n          theme: themeName === \"dark\" ? \"dark\" : \"light\",\n          type: \"error\",\n          style: { backgroundColor: background, color: text },\n        });\n      })\n      .finally(() => setIsSending(false));\n  };\n\n  const handleFieldValue = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setContactForm((oldValues) => ({\n      ...oldValues,\n      [e.target.name]: e.target.value,\n    }));\n\n    setError((oldErr) => ({ ...oldErr, [e.target.name]: \"\" }));\n  };\n\n  return (\n    <View>\n      <MainLayout>\n        <Styled.FormTitle>{t(\"contact-me\")}</Styled.FormTitle>\n        <Styled.InputsWrapper>\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.name}\n            type=\"text\"\n            label={t(\"name\")}\n            name=\"name\"\n            autoComplete=\"off\"\n            required\n            error={error.name}\n          />\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.email}\n            type=\"email\"\n            label={t(\"email\")}\n            name=\"email\"\n            autoComplete=\"off\"\n            required\n            error={error.email}\n          />\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.subject}\n            type=\"text\"\n            label={t(\"subject\")}\n            name=\"subject\"\n            autoComplete=\"off\"\n          />\n          <Textarea\n            onChange={handleFieldValue}\n            value={contactForm.message}\n            required\n            label={t(\"message\")}\n            rows={3}\n            name=\"message\"\n            error={error.message}\n          />\n          <Button\n            loaderJson={sendMailJson}\n            size=\"large\"\n            isLoading={isSending}\n            onClick={handleSendEmail}\n            fullWidth\n          >\n            {t(\"send\")}\n          </Button>\n        </Styled.InputsWrapper>\n      </MainLayout>\n    </View>\n  );\n};\n\nexport default Contact;\n"],"names":["isBigScreenDevice","useMediaQuery","minWidth","isDesktopOrLaptop","isTablet","maxWidth","isMobile","isPortrait","orientation","children","useResponsive","MobileMenu","lazy","TabletMenu","DesktopMenu","InputsWrapper","styled","FormTitle","SocialWrapper","motion","commonCss","css","theme","card","backgroundColor","InputContainer","Indicator","Input","dir","Label","Error","name","label","error","rest","float","window","id","placeholder","title","htmlFor","TextareaContainer","Textarea","params","type","message","toast","INITIAL_FORM","email","subject","useState","isSending","setIsSending","contactForm","setContactForm","t","useTranslation","useTheme","themeName","background","text","setError","handleFieldValue","e","oldValues","target","value","oldErr","Main","onChange","autoComplete","required","rows","Button","loaderJson","sendMailJson","size","isLoading","onClick","input","sendEmail","then","renderToast","style","color","catch","finally","fullWidth"],"sourceRoot":""}