{"version":3,"file":"static/js/Tablet_Navigation.8ab64a03.chunk.js","mappings":"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","sources":["layouts/TabletMenu/MenuItem.tsx","layouts/TabletMenu/Navigation.tsx"],"sourcesContent":["import lottie from \"lottie-web\";\nimport { ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Styled from \"./TabletMenu.styles\";\n\ninterface MenuItemProps {\n  name: string;\n  linkTo: string;\n  children?: ReactNode;\n}\n\nconst variants = {\n  open: {\n    y: 0,\n    x: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 0,\n    x: -250,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst MenuItem: React.FC<MenuItemProps> = ({ name, linkTo, children }) => {\n  return (\n    <Styled.TabletMenuItem\n      variants={variants}\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.95 }}\n      onMouseEnter={() => lottie.play(name)}\n      onMouseLeave={() => lottie.stop(name)}\n    >\n      <Styled.TabletMenuLink as={Link} to={linkTo}>\n        {children}\n        <Styled.TabletMenuText>{name}</Styled.TabletMenuText>\n      </Styled.TabletMenuLink>\n    </Styled.TabletMenuItem>\n  );\n};\n\nexport default MenuItem;\n","import { ReactNode, useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport MenuItem from \"./MenuItem\";\nimport * as Styled from \"./TabletMenu.styles\";\nimport HomeLottie from \"components/Lotties/Home\";\nimport LayersLottie from \"components/Lotties/Layers\";\nimport CodeLottie from \"components/Lotties/Code\";\nimport ContactLottie from \"components/Lotties/Contact\";\nimport useFlags from \"hooks/useFlags\";\nimport SunIcon from \"components/Icons/SunIcon\";\nimport MoonIcon from \"components/Icons/MoonIcon\";\nimport ColorPaletteIcon from \"components/Icons/ColorPaletteIcon\";\nimport useModal from \"hooks/useModal\";\nimport Modal from \"components/Modal\";\nimport SelectLanguage from \"layouts/MobileMenu/SelectLanguage\";\nimport SelectPalette from \"layouts/MobileMenu/SelectPalette\";\nimport { useStore } from \"store/store\";\nimport useTheme from \"hooks/useTheme\";\n\ntype ModalType = \"language\" | \"palette\" | null;\n\nconst navigate = {\n  open: {\n    y: 0,\n    x: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 0,\n    x: window.float === \"right\" ? 500 : -250,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst variants = {\n  open: {\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n  },\n  closed: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  },\n};\n\nconst style = { height: \"2.5rem\", width: \"2.5rem\" };\n\nconst Navigation = () => {\n  const [modalType, setModalType] = useState<ModalType>(null);\n  const { t, i18n } = useTranslation();\n  const { flag } = useFlags(i18n.language);\n  const { isShown, toggle } = useModal();\n  const { store, actions } = useStore();\n  const theme = useTheme();\n\n  const { themeMode } = store.global;\n  const { toggleThemeMode } = actions;\n\n  const handleSelect = useCallback(\n    (type: ModalType) => {\n      return () => {\n        toggle();\n        setModalType(type);\n      };\n    },\n    [toggle]\n  );\n\n  const handleToggle = () => {\n    toggleThemeMode(themeMode === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const getModalContent = (type: ModalType) => {\n    switch (type) {\n      case \"language\":\n        return <SelectLanguage toggle={toggle} />;\n      case \"palette\":\n        return <SelectPalette toggle={toggle} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Styled.TabletMenuItemsWrapper variants={navigate}>\n      <Modal\n        isShown={isShown}\n        hide={toggle}\n        headerText={\n          modalType === \"language\" ? t(\"select-lang\") : t(\"select-theme\")\n        }\n        modalContent={getModalContent(modalType)}\n      />\n      <MenuItem linkTo=\"/\" name={t(\"nav.home\")}>\n        <HomeLottie name={t(\"nav.home\")} style={style} />\n      </MenuItem>\n      <MenuItem linkTo=\"/apps\" name={t(\"nav.applications\")}>\n        <LayersLottie name={t(\"nav.applications\")} style={style} />\n      </MenuItem>\n      <MenuItem linkTo=\"/code\" name={t(\"nav.code\")}>\n        <CodeLottie name={t(\"nav.code\")} style={style} />\n      </MenuItem>\n      <MenuItem linkTo=\"/contact\" name={t(\"nav.contact\")}>\n        <ContactLottie name={t(\"nav.contact\")} style={style} />\n      </MenuItem>\n      <Styled.MenuCellsContainer variants={variants}>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleToggle}\n        >\n          {themeMode === \"dark\" ? (\n            <SunIcon size={35} color=\"#F8C004\" />\n          ) : (\n            <MoonIcon className=\"dark-mode\" size={35} color={theme.text} />\n          )}\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <Styled.LangCellWrapper onClick={handleSelect(\"language\")}>\n            {flag as ReactNode}\n          </Styled.LangCellWrapper>\n        </Styled.MenuCellWrapper>\n        <Styled.MenuCellWrapper\n          whileHover={{ scale: 1.2 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleSelect(\"palette\")}\n        >\n          <ColorPaletteIcon size={35} />\n        </Styled.MenuCellWrapper>\n      </Styled.MenuCellsContainer>\n    </Styled.TabletMenuItemsWrapper>\n  );\n};\n\nexport default Navigation;\n"],"names":["variants","open","y","x","opacity","transition","stiffness","velocity","closed","_ref","name","linkTo","children","_jsx","Styled","whileHover","scale","whileTap","onMouseEnter","lottie","onMouseLeave","_jsxs","as","Link","to","navigate","window","float","staggerChildren","delayChildren","staggerDirection","style","height","width","_useState","useState","_useState2","_slicedToArray","modalType","setModalType","_useTranslation","useTranslation","t","i18n","flag","useFlags","language","_useModal","useModal","isShown","toggle","_useStore","useStore","store","actions","theme","useTheme","themeMode","global","toggleThemeMode","handleSelect","useCallback","type","Modal","hide","headerText","modalContent","SelectLanguage","SelectPalette","getModalContent","MenuItem","HomeLottie","LayersLottie","CodeLottie","ContactLottie","onClick","SunIcon","size","color","MoonIcon","className","text","ColorPaletteIcon"],"sourceRoot":""}