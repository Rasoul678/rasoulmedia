{"version":3,"file":"static/js/Desktop_Menu.a504df24.chunk.js","mappings":"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","sources":["layouts/DesktopMenu/DesktopMenu.styles.ts","layouts/DesktopMenu/MenuItem.tsx","components/CustomSelect/CustomSelect.styles.ts","components/CustomSelect/CustomSelect.tsx","layouts/DesktopMenu/PaletteSelect.tsx","layouts/DesktopMenu/index.tsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nexport const DesktopNavbar = styled(motion.nav)`\n  position: sticky;\n  top: 0;\n  padding: 1rem;\n  height: 4rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ theme }) => theme.background};\n  \n  z-index: 200;\n  -webkit-box-shadow: 0px 1px 1px ${({ theme }) => theme.card.backgroundColor};\n  -moz-box-shadow: 0px 1px 1px ${({ theme }) => theme.card.backgroundColor};\n  box-shadow: 0px 1px 1px ${({ theme }) => theme.card.backgroundColor};\n`;\n\nexport const MenuItemsWrapper = styled(motion.section)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 1rem;\n`;\n\nexport const MenuItem = styled(motion.div)`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MenuLink = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const SettingWrapper = styled(motion.div)`\n  display: flex;\n  cursor: pointer;\n  // color: ${({ theme }) => theme.border};\n`;\n","import lottie from \"lottie-web\";\nimport { ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Styled from \"./DesktopMenu.styles\";\n\ninterface MenuItemProps {\n  name: string;\n  linkTo: string;\n  children?: ReactNode;\n}\n\nconst variants = {\n  open: {\n    y: 0,\n    x: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  closed: {\n    y: 0,\n    x: -250,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst MenuItem: React.FC<MenuItemProps> = ({ name, linkTo, children }) => {\n  return (\n    <Styled.MenuItem\n      variants={variants}\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.95 }}\n      onMouseEnter={() => lottie.play(name)}\n      onMouseLeave={() => lottie.stop(name)}\n    >\n      <Styled.MenuLink as={Link} to={linkTo}>\n        {children}\n      </Styled.MenuLink>\n    </Styled.MenuItem>\n  );\n};\n\nexport default MenuItem;\n","import styled from \"styled-components\";\n\nexport const SelectContainer = styled.div`\n  width: 100%;\n\n  .select__menu {\n    background: ${({ theme }) => theme.background};\n    box-shadow: 0px 0px 2px 0px ${({ theme }) => theme.text};\n  }\n\n  .select__control {\n    border: none;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  .select__single-value {\n    color: ${({ theme }) => theme.border};\n    text-transform: capitalize;\n  }\n\n  .select__option {\n    color: ${({ theme }) => theme.text};\n    text-transform: capitalize;\n  }\n\n  .select__indicators {\n    display: none;\n  }\n`;\n","import * as Styled from \"./CustomSelect.styles\";\nimport Select, { GroupBase, Props } from \"react-select\";\n\nfunction CustomSelect<\n  Option,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(props: Props<Option, IsMulti, Group>) {\n\n  return (\n    <Styled.SelectContainer>\n      <Select classNamePrefix='select' {...props} />\n    </Styled.SelectContainer>\n  );\n}\n\nexport default CustomSelect;\n","import { components } from \"react-select\";\nimport CustomSelect from \"components/CustomSelect/CustomSelect\";\nimport ColorPaletteIcon from \"components/Icons/ColorPaletteIcon\";\n\nconst PaletteSelect = (props: any) => (\n  <CustomSelect\n    {...props}\n    components={{\n      Control: ({ children, ...rest }) => (\n        <components.Control {...rest}>\n          <ColorPaletteIcon style={{ position: \"absolute\", right: 'calc(50% - 1rem)' }} size={30} />\n          {children}\n        </components.Control>\n      ),\n    }}\n  />\n);\n\nexport default PaletteSelect;\n","import { useCallback, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport * as Styled from \"./DesktopMenu.styles\";\nimport HomeLottie from \"components/Lotties/Home\";\nimport LayersLottie from \"components/Lotties/Layers\";\nimport CodeLottie from \"components/Lotties/Code\";\nimport ContactLottie from \"components/Lotties/Contact\";\nimport MenuItem from \"./MenuItem\";\nimport SunIcon from \"components/Icons/SunIcon\";\nimport MoonIcon from \"components/Icons/MoonIcon\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport useActions from \"hooks/useActions\";\nimport PaletteSelect from \"./PaletteSelect\";\nimport CustomSelect from \"components/CustomSelect/CustomSelect\";\n\ninterface DesktopMenuProps {}\n\nconst DesktopMenu: React.FC<DesktopMenuProps> = () => {\n  const { themeMode, selectedPallet, themePallet } = useTypedSelector(\n    (state) => state.global\n  );\n  const { toggleThemeMode, setThemePalette } = useActions();\n  const { t } = useTranslation();\n\n  const colorOptions = useMemo(() => {\n    return Object.entries(themePallet.pallets).map(([key, value]) => ({\n      label: t(value.name),\n      value: key,\n    }));\n  }, [t, themePallet.pallets]);\n\n  const langOptions = useMemo(() => {\n    return [\n      { label: t(\"lang.en\"), value: \"en\" },\n      { label: t(\"lang.fr\"), value: \"fr\" },\n      { label: t(\"lang.nl\"), value: \"nl\" },\n      { label: t(\"lang.hi\"), value: \"hi\" },\n      { label: t(\"lang.fa\"), value: \"fa\" },\n      { label: t(\"lang.es\"), value: \"es\" },\n    ];\n  }, [t]);\n\n  const handleToggle = () => {\n    toggleThemeMode(themeMode === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const handleChangeLanguage = useCallback((value: any) => {\n    const lang = value.value;\n    //! Reload for rtl.\n    if (lang === \"fa\" || i18next.language === \"fa\") {\n      window.location.reload();\n    }\n\n    i18next.changeLanguage(lang);\n  }, []);\n\n  const getStyles = (select?: string) => ({\n    menu: (styles: any) => ({\n      ...styles,\n      ...(select === \"lang\" ? { width: \"7rem\" } : { width: \"auto\" }),\n    }),\n    option: (styles: any, { isSelected }: { isSelected: boolean }) => ({\n      ...styles,\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      color: isSelected\n        ? themePallet.pallets[selectedPallet].mainColor + \"!important\"\n        : \"\",\n    }),\n    singleValue: (styles: any) => ({\n      ...styles,\n      cursor: \"pointer\",\n      ...(select === \"lang\" ? { width: \"6rem\" } : { width: \"3rem\" }),\n      height: \"1.8rem\",\n      color: themePallet.pallets[selectedPallet].text + \"!important\",\n      fontSize: \"1.2rem\",\n    }),\n  });\n\n  return (\n    <Styled.DesktopNavbar>\n      <Styled.MenuItemsWrapper data-tour=\"step-desktop-nav-links\">\n        <MenuItem name=\"home\" linkTo=\"/\">\n          <HomeLottie name=\"home\" style={{ width: \"2.5rem\" }} />\n        </MenuItem>\n        <MenuItem name=\"apps\" linkTo=\"/apps\">\n          <LayersLottie name=\"apps\" style={{ width: \"2.5rem\" }} />\n        </MenuItem>\n        <MenuItem name=\"code\" linkTo=\"/code\">\n          <CodeLottie name=\"code\" style={{ height: \"4rem\" }} />\n        </MenuItem>\n        <MenuItem name=\"contact\" linkTo=\"/contact\">\n          <ContactLottie name=\"contact\" style={{ width: \"3rem\" }} />\n        </MenuItem>\n      </Styled.MenuItemsWrapper>\n      <Styled.MenuItemsWrapper style={{ gap: \"0\" }}>\n        <Styled.SettingWrapper data-tour=\"step-desktop-nav-lang\">\n          <CustomSelect\n            value={{\n              label: t(`lang.${i18next.language}`),\n              value: i18next.language,\n            }}\n            options={langOptions}\n            isSearchable={false}\n            styles={getStyles(\"lang\")}\n            onChange={handleChangeLanguage}\n            hideSelectedOptions={true}\n          />\n        </Styled.SettingWrapper>\n        <Styled.SettingWrapper data-tour=\"step-desktop-nav-color\">\n          <PaletteSelect\n            value={{ label: \"\", value: selectedPallet }}\n            options={colorOptions}\n            isSearchable={false}\n            styles={getStyles()}\n            onChange={(value: any) => setThemePalette(value.value)}\n            // hideSelectedOptions={true}\n          />\n        </Styled.SettingWrapper>\n        <Styled.SettingWrapper\n          onClick={handleToggle}\n          data-tour=\"step-desktop-nav-dark\"\n        >\n          {themeMode === \"dark\" ? (\n            <SunIcon size={32} color=\"#F8C004\" />\n          ) : (\n            <MoonIcon size={30} />\n          )}\n        </Styled.SettingWrapper>\n      </Styled.MenuItemsWrapper>\n    </Styled.DesktopNavbar>\n  );\n};\n\nexport default DesktopMenu;\n"],"names":["DesktopNavbar","styled","motion","theme","background","card","backgroundColor","MenuItemsWrapper","MenuItem","MenuLink","SettingWrapper","border","variants","open","y","x","opacity","transition","stiffness","velocity","closed","name","linkTo","children","whileHover","scale","whileTap","onMouseEnter","lottie","onMouseLeave","as","Link","to","SelectContainer","text","props","classNamePrefix","components","Control","rest","c","ColorPaletteIcon","style","position","right","size","useTypedSelector","state","global","themeMode","selectedPallet","themePallet","useActions","toggleThemeMode","setThemePalette","t","useTranslation","colorOptions","useMemo","Object","entries","pallets","map","key","value","label","langOptions","handleChangeLanguage","useCallback","lang","i18next","window","location","reload","getStyles","select","menu","styles","width","option","isSelected","cursor","color","mainColor","singleValue","height","fontSize","Home","Layers","Code","Contact","gap","options","isSearchable","onChange","hideSelectedOptions","onClick","SunIcon","MoonIcon"],"sourceRoot":""}