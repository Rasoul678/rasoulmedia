{"version":3,"sources":["views/Code/index.tsx","hooks/useLottie.ts","hooks/useResponsive.ts","components/MediaQuery/Mobile.tsx","components/MediaQuery/Tablet.tsx","components/MediaQuery/Desktop.tsx","components/MediaQuery/BigScreen.tsx","layouts/Main/RenderMenu.tsx","layouts/Main/index.tsx"],"names":["Code","container","useRef","useLottie","animationData","ComingSoonJson","name","ref","options","autoplay","loop","useEffect","lottie","loadAnimation","current","renderer","destroy","useResponsive","isBigScreenDevice","useMediaQuery","minWidth","isDesktopOrLaptop","isTablet","maxWidth","isMobile","isPortrait","orientation","OnMobile","children","OnTablet","OnDesktop","OnBigScreen","MobileMenu","lazy","TabletMenu","DesktopMenu","RenderMenu","MainLayout"],"mappings":"25vBAAA,0DAyBeA,UAnBQ,WACrB,IAAMC,EAAYC,iBAA8B,MAQhD,OANAC,YAAU,CACRF,UAAWA,EACXG,cAAeC,EACfC,KAAM,eAIN,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sCACA,qBAAKC,IAAKN,W,gCCnBlB,4BA8BeE,IA3BG,SAACK,GAAsC,IAErDJ,EAKEI,EALFJ,cACAH,EAIEO,EAJFP,UAHoD,EAOlDO,EAHFC,gBAJoD,WAOlDD,EAFFE,YALoD,WAOlDF,EADFF,YANoD,MAM7C,GAN6C,EAwBtD,OAfAK,qBAAU,WAUR,OATAC,IAAOC,cAAc,CACnBZ,UAAYA,EAAkBa,QAC9BC,SAAU,MACVL,OACAD,WACAL,gBACAE,SAGK,WACLM,IAAOI,QAAQV,MAEhB,CAACF,EAAeK,EAAUC,EAAMJ,EAAML,IAElCW,M,oDCfMK,EAVO,WAOpB,MAAO,CAAEC,kBANiBC,wBAAc,CAAEC,SAAU,OAMxBC,kBALFF,wBAAc,CAAEC,SAAU,OAKLE,SAJ9BH,wBAAc,CAAEI,SAAU,OAIcC,SAHxCL,wBAAc,CAAEI,SAAU,MAGwBE,WAFhDN,wBAAc,CAAEO,YAAa,eCEnCC,EANY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAG5B,OAFqBX,IAAbO,SAEWI,EAA4B,MCGlCC,EANY,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAAe,EACZX,IAAvBO,EADmC,EACnCA,SAAUF,EADyB,EACzBA,SAElB,OAAQE,GAAYF,EAAYM,EAA4B,MCK/CE,EARa,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAAe,EACKX,IAAzCI,EADoC,EACpCA,kBAAmBH,EADiB,EACjBA,kBAE3B,OAAOG,IAAsBH,EACxBU,EACD,MCCSG,EANe,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SAG/B,OAF8BX,IAAtBC,kBAEoBU,EAA4B,M,OCApDI,EAAaC,gBACjB,kBAAM,6EAGFC,EAAaD,gBACjB,kBAAM,wDAGFE,EAAcF,gBAClB,kBAAM,6EAsBOG,EAnBc,WAC3B,OACE,qCACE,cAAC,EAAD,UACE,cAACJ,EAAD,MAEF,cAAC,EAAD,UACE,cAACE,EAAD,MAEF,cAAC,EAAD,UACE,cAACC,EAAD,MAEF,cAAC,EAAD,UACE,cAACA,EAAD,UClBOE,IAT+B,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAC/C,OACE,oCACE,cAAC,EAAD,IACCA","file":"static/js/Code_View.7e44c4c4.chunk.js","sourcesContent":["import { useRef } from \"react\";\nimport ComingSoonJson from \"assets/animations/87843-coming-soon.json\";\nimport useLottie from \"hooks/useLottie\";\nimport { View } from \"components/Global/GlobalStyles\";\nimport MainLayout from \"layouts/Main\";\n\nconst Code: React.FC = () => {\n  const container = useRef<HTMLDivElement | null>(null);\n\n  useLottie({\n    container: container as any,\n    animationData: ComingSoonJson,\n    name: \"comingSoon\",\n  });\n\n  return (\n    <View>\n      <MainLayout>\n        <h1>Code</h1>\n        <div ref={container} />\n      </MainLayout>\n    </View>\n  );\n};\n\nexport default Code;\n","import { useEffect } from \"react\";\nimport lottie, { AnimationConfigWithData } from \"lottie-web\";\n\nconst useLottie = (options: AnimationConfigWithData) => {\n  const {\n    animationData,\n    container,\n    autoplay = true,\n    loop = true,\n    name = \"\",\n  } = options;\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: (container as any).current,\n      renderer: \"svg\",\n      loop,\n      autoplay,\n      animationData,\n      name,\n    });\n\n    return () => {\n      lottie.destroy(name);\n    };\n  }, [animationData, autoplay, loop, name, container]);\n\n  return lottie;\n};\n\nexport default useLottie;\n","import { useMediaQuery } from \"react-responsive\";\n\nconst useResponsive = () => {\n  const isBigScreenDevice = useMediaQuery({ minWidth: 1824 });\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 1026 });\n  const isTablet = useMediaQuery({ maxWidth: 1025 });\n  const isMobile = useMediaQuery({ maxWidth: 550 });\n  const isPortrait = useMediaQuery({ orientation: \"portrait\" });\n\n  return { isBigScreenDevice, isDesktopOrLaptop, isTablet, isMobile, isPortrait };\n};\n\nexport default useResponsive;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnMobile: React.FC = ({ children }) => {\n  const { isMobile } = useResponsive();\n\n  return isMobile ? (children as ReactElement) : null;\n};\n\nexport default OnMobile;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnTablet: React.FC = ({ children }) => {\n  const { isMobile, isTablet } = useResponsive();\n\n  return !isMobile && isTablet ? (children as ReactElement) : null;\n};\n\nexport default OnTablet;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnDesktop: React.FC = ({ children }) => {\n  const { isDesktopOrLaptop, isBigScreenDevice } = useResponsive();\n\n  return isDesktopOrLaptop && !isBigScreenDevice\n    ? (children as ReactElement)\n    : null;\n};\n\nexport default OnDesktop;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnBigScreen: React.FC = ({ children }) => {\n  const { isBigScreenDevice } = useResponsive();\n\n  return isBigScreenDevice ? (children as ReactElement) : null;\n};\n\nexport default OnBigScreen;\n","import { lazy } from \"react\";\nimport OnMobile from \"components/MediaQuery/Mobile\";\nimport OnTablet from \"components/MediaQuery/Tablet\";\nimport OnDesktop from \"components/MediaQuery/Desktop\";\nimport OnBigScreen from \"components/MediaQuery/BigScreen\";\n\nconst MobileMenu = lazy(\n  () => import(/*webpackChunkName: \"Mobile_Menu\"*/ \"layouts/MobileMenu\")\n);\n\nconst TabletMenu = lazy(\n  () => import(/*webpackChunkName: \"Tablet_Menu\"*/ \"layouts/TabletMenu\")\n);\n\nconst DesktopMenu = lazy(\n  () => import(/*webpackChunkName: \"Desktop_Menu\"*/ \"layouts/DesktopMenu\")\n);\n\nconst RenderMenu: React.FC = () => {\n  return (\n    <>\n      <OnMobile>\n        <MobileMenu />\n      </OnMobile>\n      <OnTablet>\n        <TabletMenu />\n      </OnTablet>\n      <OnDesktop>\n        <DesktopMenu />\n      </OnDesktop>\n      <OnBigScreen>\n        <DesktopMenu />\n      </OnBigScreen>\n    </>\n  );\n};\n\nexport default RenderMenu;\n","import RenderMenu from \"./RenderMenu\";\n\ninterface MainLayoutProps {}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  return (\n    <section>\n      <RenderMenu />\n      {children}\n    </section>\n  );\n};\n\nexport default MainLayout;\n"],"sourceRoot":""}