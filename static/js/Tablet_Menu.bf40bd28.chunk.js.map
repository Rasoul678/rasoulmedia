{"version":3,"file":"static/js/Tablet_Menu.bf40bd28.chunk.js","mappings":"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","sources":["layouts/TabletMenu/TabletMenu.styles.ts","layouts/TabletMenu/MenToggle.tsx","layouts/TabletMenu/index.tsx","layouts/TabletMenu/useDimensions.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst { float, revFloat } = window;\n\ninterface TabletNavbarProps {\n  isOpen: boolean;\n}\n\nexport const TabletNavbar = styled(motion.nav)<TabletNavbarProps>`\n  position: fixed;\n  top: 0;\n  ${float}: 0;\n  bottom: 0;\n  width: ${({ isOpen }) => (isOpen ? \"15rem\" : \"0\")};\n  z-index: 2000;\n`;\n\nexport const TabletNavbarBg = styled(motion.div)`\n  position: absolute;\n  top: 0;\n  ${float}: 0;\n  bottom: 0;\n  width: 15rem;\n  background-color: ${({ theme }) => theme.background};\n  box-shadow: 0px 0px 5px 0px ${({ theme }) => theme.card.backgroundColor};\n`;\n\nexport const TabletNavbarButton = styled.button`\n  outline: none;\n  border: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  cursor: pointer;\n  position: absolute;\n  top: 18px;\n  ${float}: 5px;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: transparent;\n`;\n\nexport const TabletMenuItemsWrapper = styled(motion.ul)`\n  margin: 0;\n  padding-top: 1rem;\n  padding-${float}: 2rem;\n  padding-bottom: 1.5rem;\n  padding-${revFloat}: 0;\n\n  position: absolute;\n  top: 4.5rem;\n  width: 100%;\n  height: calc(100% - 5rem);\n`;\n\nexport const TabletMenuItem = styled(motion.li)`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin: 0.8rem 1.5rem;\n`;\n\nexport const TabletMenuLink = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: ${({ theme }) => theme.text};\n  text-decoration: none;\n  text-transform: capitalize;\n`;\n\nexport const TabletMenuText = styled.span`\n  padding: 0.5rem 0.5rem 0;\n  font-size: 1.2rem;\n`;\n\nexport const MenuCellsContainer = styled(motion.div)`\n  width: 100%;\n  position: absolute;\n  bottom: 0rem;\n  ${float}: 0;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n`;\n\nexport const MenuCellWrapper = styled(motion.div)`\n  width: 70%;\n  aspect-ratio: 1;\n  border-radius: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  flex-direction: column;\n  cursor: pointer;\n  color: ${({ theme }) => theme.border};\n\n  @supports (backdrop-filter: blur(10px)) {\n    backdrop-filter: blur(20px);\n  }\n\n  .dark-mode {\n    transform: rotateZ(45deg) !important;\n  }\n`;\n\nexport const LangCellWrapper = styled.div`\n  width: 83%;\n  height: 83%;\n  border-radius: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n","import { motion } from \"framer-motion\";\nimport { useTheme } from \"styled-components\";\nimport * as Styled from \"./TabletMenu.styles\";\n\ninterface MenuToggleProps {\n  toggle: () => void;\n}\n\nconst MenuToggle: React.FC<MenuToggleProps> = ({ toggle }) => {\n  const { text } = useTheme();\n\n  const Path = (props: any) => (\n    <motion.path\n      fill=\"transparent\"\n      strokeWidth=\"3\"\n      stroke={text}\n      strokeLinecap=\"round\"\n      {...props}\n    />\n  );\n\n  return (\n    <Styled.TabletNavbarButton onClick={toggle}>\n      <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\">\n        <Path\n          variants={{\n            closed: { d: \"M 2 2.5 L 20 2.5\" },\n            open: { d: \"M 3 16.5 L 17 2.5\" },\n          }}\n        />\n        <Path\n          d=\"M 2 9.423 L 20 9.423\"\n          variants={{\n            closed: { opacity: 1 },\n            open: { opacity: 0 },\n          }}\n          transition={{ duration: 0.1 }}\n        />\n        <Path\n          variants={{\n            closed: { d: \"M 2 16.346 L 20 16.346\" },\n            open: { d: \"M 3 2.5 L 17 16.346\" },\n          }}\n        />\n      </svg>\n    </Styled.TabletNavbarButton>\n  );\n};\n\nexport default MenuToggle;\n","import { useRef, lazy, Suspense } from \"react\";\nimport { useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./useDimensions\";\nimport MenuToggle from \"./MenToggle\";\nimport * as Styled from \"./TabletMenu.styles\";\nimport AppLoader from \"components/AppLoader\";\n\nconst Navigation = lazy(\n  () => import(/*webpackChunkName: \"Tablet_Navigation\"*/ \"./Navigation\")\n);\n\nconst { direction } = window;\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2,\n    },\n  }),\n  closed: {\n    clipPath: `circle(20px at ${direction === \"ltr\" ? \"30px\" : \"270px\"} 40px)`,\n    transition: {\n      type: \"spring\",\n      delay: 0.2,\n      stiffness: 400,\n      damping: 40,\n    },\n  },\n};\n\ninterface TabletMenuProps {}\n\nconst TabletMenu: React.FC<TabletMenuProps> = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const { height } = useDimensions(containerRef);\n\n  return (\n    <Styled.TabletNavbar\n      initial={false}\n      animate={isOpen ? \"open\" : \"closed\"}\n      custom={height}\n      ref={containerRef}\n      isOpen={isOpen}\n    >\n      <Styled.TabletNavbarBg variants={sidebar} />\n      <Suspense fallback={<AppLoader />}>{isOpen && <Navigation />}</Suspense>\n      <MenuToggle toggle={() => toggleOpen()} />\n    </Styled.TabletNavbar>\n  );\n};\n\nexport default TabletMenu;\n","import { useEffect, useRef } from \"react\";\n\n// Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\nexport const useDimensions = (ref: any) => {\n  const dimensions = useRef({ width: 0, height: 0 });\n\n  useEffect(() => {\n    dimensions.current.width = ref.current.offsetWidth;\n    dimensions.current.height = ref.current.offsetHeight;\n  }, []);\n\n  return dimensions.current;\n};\n"],"names":["_window","window","float","revFloat","TabletNavbar","styled","motion","nav","_templateObject","_taggedTemplateLiteral","_ref","isOpen","TabletNavbarBg","div","_templateObject2","_ref2","theme","background","_ref3","card","backgroundColor","TabletNavbarButton","_templateObject3","TabletMenuItemsWrapper","ul","_templateObject4","TabletMenuItem","li","_templateObject5","TabletMenuLink","_templateObject6","_ref4","text","TabletMenuText","_templateObject7","MenuCellsContainer","_templateObject8","MenuCellWrapper","_templateObject9","_ref5","border","LangCellWrapper","_templateObject10","toggle","useTheme","Path","props","_jsx","path","_objectSpread","fill","strokeWidth","stroke","strokeLinecap","Styled","onClick","children","_jsxs","width","height","viewBox","variants","closed","d","open","opacity","transition","duration","Navigation","lazy","direction","sidebar","clipPath","concat","arguments","length","undefined","type","stiffness","restDelta","delay","damping","_useCycle","useCycle","_useCycle2","_slicedToArray","toggleOpen","containerRef","useRef","ref","dimensions","useEffect","current","offsetWidth","offsetHeight","useDimensions","initial","animate","custom","Suspense","fallback","AppLoader","MenuToggle"],"sourceRoot":""}