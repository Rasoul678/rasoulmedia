{"version":3,"sources":["components/MediaQuery/Mobile.tsx","components/MediaQuery/Tablet.tsx","components/MediaQuery/Desktop.tsx","components/MediaQuery/BigScreen.tsx","layouts/Main/RenderMenu.tsx","layouts/Main/index.tsx","views/Contact/Contact.styles.ts","components/Input/Input.styles.ts","components/Input/index.tsx","components/Textarea/Textarea.styles.ts","components/Textarea/index.tsx","utils/renderToast.ts","views/Contact/index.tsx","hooks/useResponsive.ts"],"names":["OnMobile","children","useResponsive","isMobile","OnTablet","isTablet","OnDesktop","isDesktopOrLaptop","isBigScreenDevice","OnBigScreen","MobileMenu","lazy","TabletMenu","DesktopMenu","RenderMenu","MainLayout","InputsWrapper","styled","div","FormTitle","h2","SocialWrapper","motion","float","window","commonCss","css","theme","card","backgroundColor","InputContainer","Indicator","Input","input","Label","label","Error","span","name","error","rest","id","placeholder","title","htmlFor","TextareaContainer","Textarea","textarea","renderToast","params","type","message","toast","INITIAL_FORM","email","subject","Contact","useState","isSending","setIsSending","contactForm","setContactForm","t","useTranslation","useTheme","themeName","background","text","setError","handleFieldValue","e","oldValues","target","value","oldErr","Main","onChange","autoComplete","required","rows","Button","loaderJson","sendMailJson","size","isLoading","onClick","sendEmail","then","style","color","catch","finally","fullWidth","useMediaQuery","minWidth","maxWidth","isPortrait","orientation"],"mappings":"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","file":"static/js/Contact_View.f9c39f14.chunk.js","sourcesContent":["import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnMobile: React.FC = ({ children }) => {\n  const { isMobile } = useResponsive();\n\n  return isMobile ? (children as ReactElement) : null;\n};\n\nexport default OnMobile;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnTablet: React.FC = ({ children }) => {\n  const { isMobile, isTablet } = useResponsive();\n\n  return !isMobile && isTablet ? (children as ReactElement) : null;\n};\n\nexport default OnTablet;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnDesktop: React.FC = ({ children }) => {\n  const { isDesktopOrLaptop, isBigScreenDevice } = useResponsive();\n\n  return isDesktopOrLaptop && !isBigScreenDevice\n    ? (children as ReactElement)\n    : null;\n};\n\nexport default OnDesktop;\n","import { ReactElement } from \"react\";\nimport useResponsive from \"hooks/useResponsive\";\n\nconst OnBigScreen: React.FC = ({ children }) => {\n  const { isBigScreenDevice } = useResponsive();\n\n  return isBigScreenDevice ? (children as ReactElement) : null;\n};\n\nexport default OnBigScreen;\n","import { lazy } from \"react\";\nimport OnMobile from \"components/MediaQuery/Mobile\";\nimport OnTablet from \"components/MediaQuery/Tablet\";\nimport OnDesktop from \"components/MediaQuery/Desktop\";\nimport OnBigScreen from \"components/MediaQuery/BigScreen\";\n\nconst MobileMenu = lazy(\n  () => import(/*webpackChunkName: \"Mobile_Menu\"*/ \"layouts/MobileMenu\")\n);\n\nconst TabletMenu = lazy(\n  () => import(/*webpackChunkName: \"Tablet_Menu\"*/ \"layouts/TabletMenu\")\n);\n\nconst DesktopMenu = lazy(\n  () => import(/*webpackChunkName: \"Desktop_Menu\"*/ \"layouts/DesktopMenu\")\n);\n\nconst RenderMenu: React.FC = () => {\n  return (\n    <>\n      <OnMobile>\n        <MobileMenu />\n      </OnMobile>\n      <OnTablet>\n        <TabletMenu />\n      </OnTablet>\n      <OnDesktop>\n        <DesktopMenu />\n      </OnDesktop>\n      <OnBigScreen>\n        <DesktopMenu />\n      </OnBigScreen>\n    </>\n  );\n};\n\nexport default RenderMenu;\n","import RenderMenu from \"./RenderMenu\";\n\ninterface MainLayoutProps {}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  return (\n    <section>\n      <RenderMenu />\n      {children}\n    </section>\n  );\n};\n\nexport default MainLayout;\n","import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nexport const InputsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  width: 60%;\n  margin: 1rem auto 0rem;\n\n  @media (max-width: 500px) {\n    width: 80%;\n  }\n\n  @media (max-width: 900px) {\n    width: 75%;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin-top: 2rem;\n`;\n\nexport const SocialWrapper = styled(motion.div)`\n  position: relative;\n  cursor: pointer;\n`;\n","import styled, { css } from \"styled-components\";\n\nconst { float } = window;\n\nconst commonCss = css`\n  line-height: 1rem;\n  font-size: 0.85rem;\n  top: -1rem;\n  background: #fff;\n  padding: 0.35rem 0.8rem;\n  ${float}: 0;\n  border-radius: 0.2rem;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  flex: 1 1 250px;\n`;\n\nexport const Indicator = styled.div`\n  position: absolute;\n  top: 2.3rem;\n  width: 0;\n  height: 0.2rem;\n  border-bottom-left-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem;\n  background-color: #50a989;\n  transition: width 0.3s linear;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  padding: 0.5rem 0.8rem;\n  font-size: 1.2rem;\n  border-radius: 0.3rem;\n  border: none;\n  box-sizing: border-box;\n  outline: 0;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n\n  ::placeholder {\n    color: transparent;\n  }\n\n  :focus {\n    border-color: #50a989;\n  }\n\n  :not(:placeholder-shown) + label::before {\n    ${commonCss};\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :not(:placeholder-shown) ~ div,\n  :focus ~ div {\n    width: 100%;\n  }\n\n  :invalid ~ div {\n    background-color: #bd4b4b;\n  }\n\n  :focus + label::before {\n    ${commonCss};\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :required:focus + label::after,\n  :required:not(:placeholder-shown) + label::after {\n    content: \"*\";\n    position: absolute;\n    top: -1.5rem;\n    ${float}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Label = styled.label`\n  ::before {\n    text-transform: capitalize;\n    content: attr(title);\n    position: absolute;\n    top: 0;\n    ${float}: 0.8rem;\n    width: fit-content;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #ccc;\n    transition: all 0.3s ease;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0rem;\n    ${float}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Error = styled.span`\n  width: 100%;\n  display: block;\n  font-size: 0.8rem;\n  text-align: start;\n  font-weight: bold;\n  color: #eb4a62;\n`;\n","import { InputHTMLAttributes } from \"react\";\nimport * as Styled from \"./Input.styles\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label?: string;\n  error?: string;\n}\n\nconst Input: React.FC<InputProps> = ({ name, label, error, ...rest }) => {\n  return (\n    <Styled.InputContainer>\n      <Styled.Input id={name} name={name} placeholder=\"placeholder\" {...rest} />\n      <Styled.Label title={label} htmlFor={name} />\n      <Styled.Indicator />\n      {!!error && <Styled.Error>{error}</Styled.Error>}\n    </Styled.InputContainer>\n  );\n};\n\nexport default Input;\n","import styled, { css } from \"styled-components\";\n\nconst { float } = window;\n\nconst commonCss = css`\n  line-height: 1rem;\n  font-size: 0.85rem;\n  top: -1rem;\n  background: #fff;\n  padding: 0.35rem 0.8rem;\n  ${float}: 0;\n  border-radius: 0.2rem;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n`;\n\nexport const TextareaContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const Textarea = styled.textarea`\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 7rem;\n  outline: 0;\n  padding: 1rem 0.8rem;\n  font-size: 1rem;\n  font-family: IRANSans;\n  border-radius: 0.3rem;\n  border: none;\n  box-sizing: border-box;\n  background-color: ${({ theme }) => theme.card.backgroundColor};\n  color: #ccc;\n\n  @media only screen and (min-width: 706px) {\n    min-height: 12rem;\n  }\n\n  ::placeholder {\n    color: transparent;\n  }\n\n  :focus {\n    border-color: #50a989;\n  }\n\n  :not(:placeholder-shown) ~ div,\n  :focus ~ div {\n    width: 100%;\n  }\n\n  :invalid ~ div {\n    background-color: #bd4b4b;\n  }\n\n  :not(:placeholder-shown) + label::before {\n    ${commonCss};\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :focus + label::before {\n    ${commonCss};\n    font-weight: bold;\n    color: #ccc;\n  }\n\n  :required:focus + label::after,\n  :required:not(:placeholder-shown) + label::after {\n    content: \"*\";\n    position: absolute;\n    top: -1.5rem;\n    ${float}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Label = styled.label`\n  ::before {\n    text-transform: capitalize;\n    content: attr(title);\n    position: absolute;\n    top: 0;\n    ${float}: 0.8rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    width: fit-content;\n    color: #ccc;\n    transition: all 0.3s ease;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: 0rem;\n    ${float}: 0.3rem;\n    line-height: 2.7rem;\n    font-size: 0.9rem;\n    color: #bd4b4b;\n    transition: all 0.3s ease;\n  }\n`;\n\nexport const Indicator = styled.div`\n  position: absolute;\n  bottom: 0.65rem;\n  width: 0;\n  height: 0.2rem;\n  border-bottom-left-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem;\n  background-color: #50a989;\n  transition: width 0.3s linear;\n`;\n\nexport const Error = styled.span`\n  position: absolute;\n  width: 100%;\n  bottom: -0.7rem;\n  display: block;\n  font-size: 0.8rem;\n  text-align: start;\n  font-weight: bold;\n  color: #eb4a62;\n`;\n","import { TextareaHTMLAttributes } from \"react\";\nimport * as Styled from \"./Textarea.styles\";\n\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  name: string;\n  label?: string;\n  error?: string;\n}\n\nconst Textarea: React.FC<TextareaProps> = ({ name, label, error, ...rest }) => {\n  return (\n    <Styled.TextareaContainer>\n      <Styled.Textarea\n        id={name}\n        name={name}\n        placeholder=\"placeholder\"\n        {...rest}\n      />\n      <Styled.Label title={label} htmlFor={name} />\n      <Styled.Indicator />\n      {!!error && <Styled.Error>{error}</Styled.Error>}\n    </Styled.TextareaContainer>\n  );\n};\n\nexport default Textarea;\n","import { toast } from \"react-toastify\";\nimport { ToastContent, ToastOptions } from \"react-toastify/dist/types\";\n\nconst renderToast = (params: ToastOptions & { message: ToastContent }) => {\n  const { type, message, ...rest } = params;\n\n  if (!!type && type !== \"default\") {\n    return toast[type](message, { ...rest });\n  } else {\n    return toast(message, { ...rest });\n  }\n};\n\nexport default renderToast;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport Input from \"components/Input\";\nimport Textarea from \"components/Textarea\";\nimport Button from \"components/Button\";\nimport sendMailJson from \"assets/animations/lordicons/green/177-envelope-mail-send-outline-edited.json\";\nimport { sendEmail } from \"utils/helpers\";\nimport { View } from \"components/Global/GlobalStyles\";\nimport * as Styled from \"./Contact.styles\";\nimport renderToast from \"utils/renderToast\";\nimport MainLayout from \"layouts/Main\";\n\nconst INITIAL_FORM = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n};\n\nconst Contact: React.FC = () => {\n  const [isSending, setIsSending] = useState(false);\n  const [contactForm, setContactForm] = useState(INITIAL_FORM);\n  const { t } = useTranslation();\n  const { name: themeName, background, text } = useTheme();\n\n  const [error, setError] = useState({ name: \"\", email: \"\", message: \"\" });\n\n  const handleSendEmail = () => {\n    if (!contactForm.message) {\n      setError((oldErr) => ({\n        ...oldErr,\n        message: t(\"msg.input.error\", { input: t(\"message\") }),\n      }));\n    }\n\n    if (!contactForm.name) {\n      setError((oldErr) => ({\n        ...oldErr,\n        name: t(\"msg.input.error\", { input: t(\"name\") }),\n      }));\n    }\n\n    if (!contactForm.email) {\n      setError((oldErr) => ({\n        ...oldErr,\n        email: t(\"msg.input.error\", { input: t(\"email\") }),\n      }));\n    }\n\n    if (!contactForm.name || !contactForm.message || !contactForm.email) return;\n\n    setIsSending(true);\n    sendEmail(contactForm)\n      .then(() => {\n        setContactForm(INITIAL_FORM);\n        renderToast({\n          message: t(\"msg.message.sent\"),\n          theme: themeName === \"dark\" ? \"dark\" : \"light\",\n          type: \"success\",\n          style: { backgroundColor: background, color: text },\n        });\n      })\n      .catch(() => {\n        renderToast({\n          message: t(\"msg.message.error\"),\n          theme: themeName === \"dark\" ? \"dark\" : \"light\",\n          type: \"error\",\n          style: { backgroundColor: background, color: text },\n        });\n      })\n      .finally(() => setIsSending(false));\n  };\n\n  const handleFieldValue = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setContactForm((oldValues) => ({\n      ...oldValues,\n      [e.target.name]: e.target.value,\n    }));\n\n    setError((oldErr) => ({ ...oldErr, [e.target.name]: \"\" }));\n  };\n\n  return (\n    <View>\n      <MainLayout>\n        <Styled.FormTitle>{t(\"contact-me\")}</Styled.FormTitle>\n        <Styled.InputsWrapper>\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.name}\n            type=\"text\"\n            label={t(\"name\")}\n            name=\"name\"\n            autoComplete=\"off\"\n            required\n            error={error.name}\n          />\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.email}\n            type=\"email\"\n            label={t(\"email\")}\n            name=\"email\"\n            autoComplete=\"off\"\n            required\n            error={error.email}\n          />\n          <Input\n            onChange={handleFieldValue}\n            value={contactForm.subject}\n            type=\"text\"\n            label={t(\"subject\")}\n            name=\"subject\"\n            autoComplete=\"off\"\n          />\n          <Textarea\n            onChange={handleFieldValue}\n            value={contactForm.message}\n            required\n            label={t(\"message\")}\n            rows={3}\n            name=\"message\"\n            error={error.message}\n          />\n          <Button\n            loaderJson={sendMailJson}\n            size=\"medium\"\n            isLoading={isSending}\n            onClick={handleSendEmail}\n            fullWidth\n          >\n            {t(\"send\")}\n          </Button>\n        </Styled.InputsWrapper>\n      </MainLayout>\n    </View>\n  );\n};\n\nexport default Contact;\n","import { useMediaQuery } from \"react-responsive\";\n\nconst useResponsive = () => {\n  const isBigScreenDevice = useMediaQuery({ minWidth: 1824 });\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 1026 });\n  const isTablet = useMediaQuery({ maxWidth: 1025 });\n  const isMobile = useMediaQuery({ maxWidth: 550 });\n  const isPortrait = useMediaQuery({ orientation: \"portrait\" });\n\n  return { isBigScreenDevice, isDesktopOrLaptop, isTablet, isMobile, isPortrait };\n};\n\nexport default useResponsive;\n"],"sourceRoot":""}