{"version":3,"file":"static/js/8682.c3facc27.chunk.js","mappings":"4NAOaA,EAASC,IAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6lBACrB,SAAAC,GAAY,OAAAA,EAATC,UAA6B,OAAS,aAAa,IAO3D,SAAAC,GAAQ,MAAuB,UAAvBA,EAALC,MAAmBC,KAAmB,UAAY,MAAM,IAE3D,SAAAC,GAAQ,MAAuB,UAAvBA,EAALF,MAAmBC,KAAmB,UAAY,MAAM,IACjD,SAAAE,GAAA,IAAGH,EAAKG,EAALH,MAAc,MACjB,YADiBG,EAAPC,SACGJ,EAAMK,QAAQC,UAAUC,eAAe,IACzD,SAAAC,GAAA,IAAGR,EAAKQ,EAALR,MAAc,MACZ,YADYQ,EAAPJ,QACOJ,EAAMS,OAAST,EAAMK,QAAQC,UAAUI,SAAS,IAGxE,SAAAC,GAAA,IAAGX,EAAKW,EAALX,MAAc,MACL,YADKW,EAAPP,SACW,qBAAAQ,OAAyBZ,EAAMS,OAAQ,IAM5D,SAAAI,GAAO,MACE,UADFA,EAAJC,MAEH,wDAAwD,IACxD,SAAAC,GAAO,MACE,WADFA,EAAJD,MAEH,wDAAwD,IACxD,SAAAE,GAAO,MACE,UADFA,EAAJF,MACiB,qDAAqD,IAInD,SAAAG,GAAQ,MAAuB,UAAvBA,EAALjB,MAAmBC,KAAmB,UAAY,MAAM,IASxEiB,EAAexB,IAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,qEAEzB,SAAAwB,GAAU,OAAAA,EAAPC,QAAyB,OAAS,MAAM,I,0+5CCIxD,EA1CsC,SAACC,GACrC,IACEC,EAQED,EARFC,QACAT,EAOEQ,EAPFR,KACAU,EAMEF,EANFE,UACAC,EAKEH,EALFG,WACA3B,EAIEwB,EAJFxB,UAAS4B,EAIPJ,EAHFlB,QAAAA,OAAO,IAAAsB,EAAG,UAASA,EACnBC,EAEEL,EAFFK,SACGC,GAAIC,EAAAA,EAAAA,GACLP,EAAKQ,GACHC,GAAYC,EAAAA,EAAAA,QAA8B,OAEhDC,EAAAA,EAAAA,GAAU,CACRF,UAAWA,EACXG,cAAeT,GAAcU,EAC7BlC,KAAM,WAGR,IAAMmC,EAAoB,WACnBZ,GACI,OAAPD,QAAO,IAAPA,GAAAA,GAEJ,EAEA,OACEc,EAAAA,EAAAA,MAACC,GAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACZzC,UAAWA,EACXgB,KAAMA,EACNS,QAASa,EACTI,UAAWJ,EACXhC,QAASA,EACTqC,KAAK,SACLC,SAAU,GACNd,GAAI,IAAAD,SAAA,EAERgB,EAAAA,EAAAA,KAACL,EAAmB,CAACjB,QAASG,EAAWoB,IAAKb,KAC5CP,GAAaG,KAGrB,C,wDC7BA,IAvBkB,SAACkB,GACjB,IACEX,EAKEW,EALFX,cACAH,EAIEc,EAJFd,UAASe,EAIPD,EAHFE,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAGbH,EAFFI,KAAAA,OAAI,IAAAD,GAAOA,EAAAE,EAETL,EADF5C,KAAAA,OAAI,IAAAiD,EAAG,GAAEA,EAcX,OAXAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,cAAqB,CACnBrB,UAAYA,EAAkBsB,QAC9BC,SAAU,MACVL,KAAAA,EACAF,SAAAA,EACAb,cAAAA,EACAjC,KAAAA,GAEJ,GAAG,CAACiC,EAAea,EAAUE,EAAMhD,EAAM8B,IAElCqB,GACT,C","sources":["components/Button/Button.styles.ts","components/Button/index.tsx","hooks/useLottie.ts"],"sourcesContent":["import styled from \"styled-components\";\ninterface IButtonProps {\n  size: \"small\" | \"medium\" | \"large\";\n  fullWidth?: boolean;\n  variant: \"outline\" | \"ghost\" | \"regular\";\n}\n\nexport const Button = styled.div<IButtonProps>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"fit-content\")};\n  min-width: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  border: 2px solid\n    ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n  box-shadow: 3px 3px\n    ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n  background: ${({ theme, variant }) =>\n    variant === \"regular\" && theme.buttons.secondary.backgroundColor};\n  color: ${({ theme, variant }) =>\n    variant !== \"regular\" ? theme.border : theme.buttons.secondary.textColor};\n  padding: 0.1em 1em 0.1em;\n  border-radius: 0.35em;\n  ${({ theme, variant }) =>\n    variant === \"outline\" && `border: 1px solid ${theme.border}`};\n  cursor: pointer;\n  user-select: none;\n  text-transform: capitalize;\n  position: relative;\n  font-weight: 500;\n  ${({ size }) =>\n    size === \"small\" &&\n    \"min-height: 2.1em; font-size: 0.75em; min-width: 4rem;\"}\n  ${({ size }) =>\n    size === \"medium\" &&\n    \"min-height: 2.3em; font-size: 0.85em; min-width: 5rem;\"}\n  ${({ size }) =>\n    size === \"large\" && \"min-height: 2.4em; font-size: 1em; min-width: 6rem;\"}\n  transition: transform 70ms ease-in-out, box-shadow 70ms ease-in-out;\n\n  :hover {\n    box-shadow: 2px 2px ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n    transform: translate3D(2px, 2px, 0);\n  }\n`;\n\ninterface ButtonLottieProps {\n  isShown?: boolean;\n}\n\nexport const ButtonLottie = styled.div<ButtonLottieProps>`\n  width: 3em;\n  display: ${({ isShown }) => (isShown ? \"flex\" : \"none\")};\n  flex-direction: column;\n`;\n","import { HTMLAttributes, ReactNode, useRef } from \"react\";\nimport useLottie from \"hooks/useLottie\";\nimport * as Styled from \"./Button.styles\";\nimport json from \"assets/animations/lordicons/333-loader-4-edited.json\";\n\ninterface ButtonProps extends HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void;\n  size: \"small\" | \"medium\" | \"large\";\n  isLoading?: boolean;\n  loaderJson?: any;\n  fullWidth?: boolean;\n  variant?: \"outline\" | \"ghost\" | \"regular\";\n  children?: ReactNode;\n}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const {\n    onClick,\n    size,\n    isLoading,\n    loaderJson,\n    fullWidth,\n    variant = \"regular\",\n    children,\n    ...rest\n  } = props;\n  const container = useRef<HTMLDivElement | null>(null);\n\n  useLottie({\n    container: container as any,\n    animationData: loaderJson || json,\n    name: \"button\",\n  });\n\n  const handleClickButton = () => {\n    if (!isLoading) {\n      onClick?.();\n    }\n  };\n\n  return (\n    <Styled.Button\n      fullWidth={fullWidth}\n      size={size}\n      onClick={handleClickButton}\n      onKeyDown={handleClickButton}\n      variant={variant}\n      role=\"button\"\n      tabIndex={0}\n      {...rest}\n    >\n      <Styled.ButtonLottie isShown={isLoading} ref={container} />\n      {!isLoading && children}\n    </Styled.Button>\n  );\n};\n\nexport default Button;\n","import { useEffect } from \"react\";\nimport lottie, { AnimationConfigWithData } from \"lottie-web\";\n\nconst useLottie = (options: AnimationConfigWithData) => {\n  const {\n    animationData,\n    container,\n    autoplay = true,\n    loop = true,\n    name = \"\",\n  } = options;\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: (container as any).current,\n      renderer: \"svg\",\n      loop,\n      autoplay,\n      animationData,\n      name,\n    });\n  }, [animationData, autoplay, loop, name, container]);\n\n  return lottie;\n};\n\nexport default useLottie;\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","_ref","fullWidth","_ref2","theme","name","_ref3","_ref4","variant","buttons","secondary","backgroundColor","_ref5","border","textColor","_ref6","concat","_ref7","size","_ref8","_ref9","_ref10","ButtonLottie","_templateObject2","_ref11","isShown","props","onClick","isLoading","loaderJson","_props$variant","children","rest","_objectWithoutProperties","_excluded","container","useRef","useLottie","animationData","json","handleClickButton","_jsxs","Styled","_objectSpread","onKeyDown","role","tabIndex","_jsx","ref","options","_options$autoplay","autoplay","_options$loop","loop","_options$name","useEffect","lottie","current","renderer"],"sourceRoot":""}