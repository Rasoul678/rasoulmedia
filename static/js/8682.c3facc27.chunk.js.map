{"version":3,"file":"static/js/8682.c3facc27.chunk.js","mappings":"4NAOaA,EAASC,IAAAA,IAAH,2mBACR,qBAAGC,UAA6B,OAAS,iBAO9C,kBAA+B,UAA/B,EAAGC,MAAmBC,KAAmB,UAAY,UAErD,kBAA+B,UAA/B,EAAGD,MAAmBC,KAAmB,UAAY,UAC3C,gBAAGD,EAAH,EAAGA,MAAH,MACA,YADA,EAAUE,SACGF,EAAMG,QAAQC,UAAUC,mBAC1C,gBAAGL,EAAH,EAAGA,MAAH,MACK,YADL,EAAUE,QACOF,EAAMM,OAASN,EAAMG,QAAQC,UAAUG,aAG/D,gBAAGP,EAAH,EAAGA,MAAH,MACY,YADZ,EAAUE,SACV,4BAA8CF,EAAMM,WAMpD,kBACS,UADT,EAAGE,MAEH,4DACA,kBACS,WADT,EAAGA,MAEH,4DACA,kBACS,UADT,EAAGA,MACiB,yDAIE,kBAA+B,UAA/B,EAAGR,MAAmBC,KAAmB,UAAY,UASlEQ,EAAeX,IAAAA,IAAH,mFAEZ,qBAAGY,QAAyB,OAAS,U,0+5CCIlD,EA1CsC,SAACC,GACrC,IACEC,EAQED,EARFC,QACAJ,EAOEG,EAPFH,KACAK,EAMEF,EANFE,UACAC,EAKEH,EALFG,WACAf,EAIEY,EAJFZ,UALF,EASIY,EAHFT,QAAAA,OANF,MAMY,UANZ,EAOEa,EAEEJ,EAFFI,SACGC,GARL,OASIL,EATJ,GAUMM,GAAYC,EAAAA,EAAAA,QAA8B,OAEhDC,EAAAA,EAAAA,GAAU,CACRF,UAAWA,EACXG,cAAeN,GAAcO,EAC7BpB,KAAM,WAGR,IAAMqB,EAAoB,WACnBT,GACI,OAAPD,QAAO,IAAPA,GAAAA,KAIJ,OACE,UAAC,GAAD,gBACEb,UAAWA,EACXS,KAAMA,EACNI,QAASU,EACTC,UAAWD,EACXpB,QAASA,EACTsB,KAAK,SACLC,SAAU,GACNT,GARN,eAUE,SAAC,EAAD,CAAqBN,QAASG,EAAWa,IAAKT,KAC5CJ,GAAaE,Q,sDC1BrB,IAvBkB,SAACY,GACjB,IACEP,EAKEO,EALFP,cACAH,EAIEU,EAJFV,UAFF,EAMIU,EAHFC,SAAAA,OAHF,WAMID,EAFFE,KAAAA,OAJF,WAMIF,EADF1B,KAAAA,OALF,MAKS,GALT,EAmBA,OAXA6B,EAAAA,EAAAA,YAAU,WACRC,IAAAA,cAAqB,CACnBd,UAAYA,EAAkBe,QAC9BC,SAAU,MACVJ,KAAAA,EACAD,SAAAA,EACAR,cAAAA,EACAnB,KAAAA,MAED,CAACmB,EAAeQ,EAAUC,EAAM5B,EAAMgB,IAElCc","sources":["components/Button/Button.styles.ts","components/Button/index.tsx","hooks/useLottie.ts"],"sourcesContent":["import styled from \"styled-components\";\ninterface IButtonProps {\n  size: \"small\" | \"medium\" | \"large\";\n  fullWidth?: boolean;\n  variant: \"outline\" | \"ghost\" | \"regular\";\n}\n\nexport const Button = styled.div<IButtonProps>`\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"fit-content\")};\n  min-width: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  border: 2px solid\n    ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n  box-shadow: 3px 3px\n    ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n  background: ${({ theme, variant }) =>\n    variant === \"regular\" && theme.buttons.secondary.backgroundColor};\n  color: ${({ theme, variant }) =>\n    variant !== \"regular\" ? theme.border : theme.buttons.secondary.textColor};\n  padding: 0.1em 1em 0.1em;\n  border-radius: 0.35em;\n  ${({ theme, variant }) =>\n    variant === \"outline\" && `border: 1px solid ${theme.border}`};\n  cursor: pointer;\n  user-select: none;\n  text-transform: capitalize;\n  position: relative;\n  font-weight: 500;\n  ${({ size }) =>\n    size === \"small\" &&\n    \"min-height: 2.1em; font-size: 0.75em; min-width: 4rem;\"}\n  ${({ size }) =>\n    size === \"medium\" &&\n    \"min-height: 2.3em; font-size: 0.85em; min-width: 5rem;\"}\n  ${({ size }) =>\n    size === \"large\" && \"min-height: 2.4em; font-size: 1em; min-width: 6rem;\"}\n  transition: transform 70ms ease-in-out, box-shadow 70ms ease-in-out;\n\n  :hover {\n    box-shadow: 2px 2px ${({ theme }) => (theme.name === \"light\" ? \"#121212\" : \"#eee\")};\n    transform: translate3D(2px, 2px, 0);\n  }\n`;\n\ninterface ButtonLottieProps {\n  isShown?: boolean;\n}\n\nexport const ButtonLottie = styled.div<ButtonLottieProps>`\n  width: 3em;\n  display: ${({ isShown }) => (isShown ? \"flex\" : \"none\")};\n  flex-direction: column;\n`;\n","import { HTMLAttributes, ReactNode, useRef } from \"react\";\nimport useLottie from \"hooks/useLottie\";\nimport * as Styled from \"./Button.styles\";\nimport json from \"assets/animations/lordicons/333-loader-4-edited.json\";\n\ninterface ButtonProps extends HTMLAttributes<HTMLDivElement> {\n  onClick?: () => void;\n  size: \"small\" | \"medium\" | \"large\";\n  isLoading?: boolean;\n  loaderJson?: any;\n  fullWidth?: boolean;\n  variant?: \"outline\" | \"ghost\" | \"regular\";\n  children?: ReactNode;\n}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const {\n    onClick,\n    size,\n    isLoading,\n    loaderJson,\n    fullWidth,\n    variant = \"regular\",\n    children,\n    ...rest\n  } = props;\n  const container = useRef<HTMLDivElement | null>(null);\n\n  useLottie({\n    container: container as any,\n    animationData: loaderJson || json,\n    name: \"button\",\n  });\n\n  const handleClickButton = () => {\n    if (!isLoading) {\n      onClick?.();\n    }\n  };\n\n  return (\n    <Styled.Button\n      fullWidth={fullWidth}\n      size={size}\n      onClick={handleClickButton}\n      onKeyDown={handleClickButton}\n      variant={variant}\n      role=\"button\"\n      tabIndex={0}\n      {...rest}\n    >\n      <Styled.ButtonLottie isShown={isLoading} ref={container} />\n      {!isLoading && children}\n    </Styled.Button>\n  );\n};\n\nexport default Button;\n","import { useEffect } from \"react\";\nimport lottie, { AnimationConfigWithData } from \"lottie-web\";\n\nconst useLottie = (options: AnimationConfigWithData) => {\n  const {\n    animationData,\n    container,\n    autoplay = true,\n    loop = true,\n    name = \"\",\n  } = options;\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: (container as any).current,\n      renderer: \"svg\",\n      loop,\n      autoplay,\n      animationData,\n      name,\n    });\n  }, [animationData, autoplay, loop, name, container]);\n\n  return lottie;\n};\n\nexport default useLottie;\n"],"names":["Button","styled","fullWidth","theme","name","variant","buttons","secondary","backgroundColor","border","textColor","size","ButtonLottie","isShown","props","onClick","isLoading","loaderJson","children","rest","container","useRef","useLottie","animationData","json","handleClickButton","onKeyDown","role","tabIndex","ref","options","autoplay","loop","useEffect","lottie","current","renderer"],"sourceRoot":""}